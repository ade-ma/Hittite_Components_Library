set_simulator_type(1); 
set_design_type(analogRFnet); 


/*---------global variables------------------*/

decl type_default = "RF1 Selected"; 

/*---------forms and formset------------------*/

create_constant_form("RF1 Selected", "RF1 Selected", 0, " ", "RF1 Selected");
create_constant_form("RF2 Selected", "RF2 Selected", 0, " ", "RF2 Selected");

create_form_set("formset_type", "RF1 Selected", "RF2 Selected");


/*-------modified value parameter callback function--------*/
defun Hittite_HMC347LP3_parm_modifiedValue_cb 
(
 cbP, 
 parmName, 
 itemInfoP 
) 
{ 
  decl parmList = NULL; 
  decl type; 
  type = pcb_get_form_value(itemInfoP, "Type");
 
 if(parmName == "Type")
  {
    if(type == "RF1 Selected")
    {
      parmList = pcb_set_string(parmList, "File", "\"HMC347LP3_rf1_selected_deembedded.s3p\"");
      parmList = pcb_set_string(parmList, "Temp", "25");
      parmList = pcb_set_string(parmList, "RF_Range", "0-14 GHz");
    } 
    else if(type == "RF2 Selected")
    {
      parmList = pcb_set_string(parmList, "File", "\"HMC347LP3_rf2_selected_deembedded.s3p\"");
      parmList = pcb_set_string(parmList, "Temp", "25");
      parmList = pcb_set_string(parmList, "RF_Range", "0-14 GHz");
    } 
  }
  return(parmList);
}

decl Hittite_HMC347LP3_SPCompNetlistFmt = " "; 
decl Hittite_HMC347LP3_net=" "; 
Hittite_HMC347LP3_net = strcat(Hittite_Components_Library_CIRCUIT_MODEL_DIR, "Hittite_HMC347LP3_cktName.net");
Hittite_HMC347LP3_SPCompNetlistFmt= strcat("#include \"",Hittite_HMC347LP3_net, "\" \n%d:%t%# %44?0%:%31?%C%:_net%c%;%;%e %r%b%8?%29?%:%30?%p%:%k%?[%1i]%;=%p %;%;%e%e");

create_item("Hittite_HMC347LP3" , 	 //Component name 
	     "GaAs MMIC SPDT Non Reflective Switch  DC - 14.0 GHz", 	 //Description 
	     "SNP", 	 //Instance Prefix 
	     NULL, 	 //attribute 
	     NULL, 	 //priority 
	     NULL, 	 //iconName 
	     standard_dialog, 	 //dialogCode 
	     " ", 	 //dialogData 
	     Hittite_HMC347LP3_SPCompNetlistFmt, 	 //netlistFormat 
	     "Hittite_HMC347LP3_cktName", 	 //netlistData 
	     ComponentAnnotFmt, 	 //displayFormat 
	     "Sym_3_Port_LP3_Switch", 	 //symbolName 
	     fixed_artwork, //artworkType
	     "lp3_105347", 	 //artworkData 
	     ITEM_PRIMITIVE_EX 	 //extraAttribute 
	     ,create_parm("File", 	 //Param name 
		        "No Description Entered.", 	 //Param Desc 
		        PARM_NOT_EDITED, 	 //attrib 
		        "StdFileFormSet", 	 //formset 
		        STRING_UNIT,
		        prm("StdForm", "\"HMC347LP3_rf1_selected_deembedded.s3p\"")
			  ,list(dm_create_cb(PARM_MODIFIED_CB,	 //parameter modified value 
						  "Hittite_HMC347LP3_parm_modifiedValue_cb", 	 // function name 
						  "File", 		 //clientData 
						   TRUE 
				 )
			  )
	     )
	     ,create_parm("Temp", 	 //Param name 
		        "No Description Entered.", 	 //Param Desc 
		        PARM_NOT_EDITED, 	 //attrib 
		        "StdFileFormSet", 	 //formset 
		        TEMPERATURE_UNIT,
		        prm("StdForm", "25")
			  ,list(dm_create_cb(PARM_MODIFIED_CB,	 //parameter modified value 
						  "Hittite_HMC347LP3_parm_modifiedValue_cb", 	 // function name 
						  "Temp", 		 //clientData 
						   TRUE 
				 )
			  )
	     )
	     ,create_parm("RF_Range", 	 //Param name 
		        "No Description Entered.", 	 //Param Desc 
		        PARM_NOT_EDITED, 	 //attrib 
		        "StdFileFormSet", 	 //formset 
		        FREQUENCY_UNIT,
		        prm("StdForm", "0-14 GHz")
			  ,list(dm_create_cb(PARM_MODIFIED_CB,	 //parameter modified value 
						  "Hittite_HMC347LP3_parm_modifiedValue_cb", 	 // function name 
						  "RF_Range", 		 //clientData 
						   TRUE 
				 )
			  )
	     )
	     ,create_parm("Type", 	 //Param name 
		        "Component type",	 //Param Desc 
		        PARM_NOT_NETLISTED | PARM_DISCRETE_VALUE,
		        "formset_type", 	 //formset 
		        UNITLESS_UNIT,
		        prm(type_default)		 //defaultValue 
 			  ,list(dm_create_cb(PARM_MODIFIED_CB,	 //parameter modified value 
						  "Hittite_HMC347LP3_parm_modifiedValue_cb", 	 // function name 
						  "Type", 		 //clientData 
						   TRUE 
				 )
			  )
	     )
);
